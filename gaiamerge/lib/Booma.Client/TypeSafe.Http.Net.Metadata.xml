<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TypeSafe.Http.Net.Metadata</name>
    </assembly>
    <members>
        <member name="T:TypeSafe.Http.Net.AliasAsAttribute">
            <summary>
            Metadata attribute that marks a parameter or property to be the specified name
            instead of the name of the attribute or property as-is.
            </summary>
        </member>
        <member name="P:TypeSafe.Http.Net.AliasAsAttribute.Name">
            <summary>
            The name to alias to.
            </summary>
        </member>
        <member name="M:TypeSafe.Http.Net.AliasAsAttribute.#ctor(System.String)">
            <summary>
            Creates a new marker for changing the name of a parameter or property name
            to the specified <see cref="!:name"/>
            </summary>
            <param name="name">The new name to change the property or parmeter to.</param>
        </member>
        <member name="T:TypeSafe.Http.Net.DynamicHeaderAttribute">
            <summary>
            Metadata marker that indicates a specified header should be added to the request and that the value is not known until service call.
            Multiple header attributes will be combined on interfaces or methods. This fits the functionality of MOST header behaviors
            in the HTTP specification. These attributes work like key value pairs where the <see cref="P:TypeSafe.Http.Net.DynamicHeaderAttribute.HeaderType"/> is the key and the <see cref="!:_Values"/> 
            is a value collection of header values.
            
            Multiple values on a header key type will be seperated with commas. Use a more specific attribute or
            inherit from this attribute to implement seperate seperator functionality.
            </summary>
        </member>
        <member name="P:TypeSafe.Http.Net.DynamicHeaderAttribute.HeaderType">
            <summary>
            The type of the header.
            </summary>
        </member>
        <member name="M:TypeSafe.Http.Net.DynamicHeaderAttribute.#ctor(System.String)">
            <summary>
            Dynamic header attribute that will get the header value from the parameter it is marked on.
            </summary>
            <param name="headerType">The header type.</param>
        </member>
        <member name="T:TypeSafe.Http.Net.HeaderAttribute">
            <summary>
            Metadata marker that indicates a specified header should be added to the request.
            Multiple header attributes will be combined on interfaces or methods. This fits the functionality of MOST header behaviors
            in the HTTP specification. These attributes work like key value pairs where the <see cref="P:TypeSafe.Http.Net.HeaderAttribute.HeaderType"/> is the key and the <see cref="P:TypeSafe.Http.Net.HeaderAttribute._Values"/> 
            is a value collection of header values.
            
            Multiple values on a header key type will be seperated with commas. Use a more specific attribute or
            inherit from this attribute to implement seperate seperator functionality.
            </summary>
        </member>
        <member name="P:TypeSafe.Http.Net.HeaderAttribute.HeaderType">
            <summary>
            The type of the header.
            </summary>
        </member>
        <member name="P:TypeSafe.Http.Net.HeaderAttribute._Values">
            <summary>
            Internally managed mutable collection of header values.
            </summary>
        </member>
        <member name="P:TypeSafe.Http.Net.HeaderAttribute.Values">
            <summary>
            The comma non-delimited collection of values.
            </summary>
        </member>
        <member name="P:TypeSafe.Http.Net.HeaderAttribute.ValueString">
            <summary>
            The built value string for the header.
            </summary>
        </member>
        <member name="M:TypeSafe.Http.Net.HeaderAttribute.BuildValueString">
            <summary>
            Overriding method that builds the value string with the delimiter specified.
            This can be overriden to apply more advanced concatenation for the format of more complex
            or non-traditional headers.
            </summary>
            <returns>The built value string.</returns>
        </member>
        <member name="T:TypeSafe.Http.Net.DeleteAttribute">
            <summary>
            The <see cref="T:System.Net.Http.HttpMethod"/>.Delete version of the
            <see cref="T:TypeSafe.Http.Net.HttpBaseMethodAttribute"/>.
            </summary>
        </member>
        <member name="M:TypeSafe.Http.Net.DeleteAttribute.#ctor(System.String)">
            <inheritdoc />
        </member>
        <member name="T:TypeSafe.Http.Net.GetAttribute">
            <summary>
            The <see cref="T:System.Net.Http.HttpMethod"/>.Get version of the
            <see cref="T:TypeSafe.Http.Net.HttpBaseMethodAttribute"/>.
            </summary>
        </member>
        <member name="M:TypeSafe.Http.Net.GetAttribute.#ctor(System.String)">
            <inheritdoc />
        </member>
        <member name="T:TypeSafe.Http.Net.HeadAttribute">
            <summary>
            The <see cref="T:System.Net.Http.HttpMethod"/>.Head version of the
            <see cref="T:TypeSafe.Http.Net.HttpBaseMethodAttribute"/>.
            </summary>
        </member>
        <member name="M:TypeSafe.Http.Net.HeadAttribute.#ctor(System.String)">
            <inheritdoc />
        </member>
        <member name="T:TypeSafe.Http.Net.HttpBaseMethodAttribute">
            <summary>
            Base metadata type for all HTTP method types.
            </summary>
        </member>
        <member name="P:TypeSafe.Http.Net.HttpBaseMethodAttribute.Method">
            <summary>
            Indicates the HTTP method used.
            </summary>
        </member>
        <member name="P:TypeSafe.Http.Net.HttpBaseMethodAttribute.Path">
            <summary>
            The endpoint path. This should not include the base path.
            (Ex. /api/auth)
            </summary>
        </member>
        <member name="T:TypeSafe.Http.Net.PostAttribute">
            <summary>
            The <see cref="T:System.Net.Http.HttpMethod"/>.Post version of the
            <see cref="T:TypeSafe.Http.Net.HttpBaseMethodAttribute"/>.
            </summary>
        </member>
        <member name="M:TypeSafe.Http.Net.PostAttribute.#ctor(System.String)">
            <inheritdoc />
        </member>
        <member name="T:TypeSafe.Http.Net.PutAttribute">
            <summary>
            The <see cref="T:System.Net.Http.HttpMethod"/>.Put version of the
            <see cref="T:TypeSafe.Http.Net.HttpBaseMethodAttribute"/>.
            </summary>
        </member>
        <member name="M:TypeSafe.Http.Net.PutAttribute.#ctor(System.String)">
            <inheritdoc />
        </member>
        <member name="T:TypeSafe.Http.Net.BodyContentAttribute">
            <summary>
            Base attribute that controls how a body is serialized.
            You should inherit this attribute to enable serialization.
            </summary>
        </member>
        <member name="T:TypeSafe.Http.Net.UrlEncodedBodyAttribute">
            <summary>
            Metadata marker that indicates an object should be serialized in the body
            using url encoded semantics.
            </summary>
        </member>
        <member name="T:TypeSafe.Http.Net.ProtobufBodyAttribute">
            <summary>
            Metadata marker that indicates an object should be serialized in the body
            using Google Protocol Buffers serialization.
            </summary>
        </member>
        <member name="T:TypeSafe.Http.Net.StringBodyAttribute">
            <summary>
            Metadata marker that indicates an object should be serialized in the body
            using basic string content body.
            </summary>
        </member>
        <member name="T:TypeSafe.Http.Net.JsonBodyAttribute">
            <summary>
            Metadata marker that indicates an object should be serialized in the body
            using a JSON serializer.
            </summary>
        </member>
        <member name="T:TypeSafe.Http.Net.XmlBodyAttribute">
            <summary>
            Metadata marker that indicates an object should be serialized in the body
            using xml serialization semantics.
            </summary>
        </member>
        <member name="T:TypeSafe.Http.Net.QueryStringParameterAttribute">
            <summary>
            Similar to ASP Core's QueryString attribut that indicates a parameter is coming from a query string this metadata
            marker will indicate that a parameter should be inserted into the the querystring.
            </summary>
        </member>
        <member name="T:TypeSafe.Http.Net.SupressResponseErrorCodesAttribute">
            <summary>
            This metadata indicates that response error codes from responses. Usecases may include wanting
            to deserialize JSON error response messages when a request fails. The default behaviour of throwing on response
            codes that are in the error range may want to be surpressed.
            </summary>
        </member>
        <member name="P:TypeSafe.Http.Net.SupressResponseErrorCodesAttribute.SupressedCodes">
            <summary>
            Map that indicates if a code is supressed.
            All values are always initialized.
            </summary>
        </member>
        <member name="M:TypeSafe.Http.Net.SupressResponseErrorCodesAttribute.ErrorCodeSupressionDictionary.GetEnumerator">
            <inheritdoc />
        </member>
        <member name="M:TypeSafe.Http.Net.SupressResponseErrorCodesAttribute.ErrorCodeSupressionDictionary.System#Collections#IEnumerable#GetEnumerator">
            <inheritdoc />
        </member>
        <member name="M:TypeSafe.Http.Net.SupressResponseErrorCodesAttribute.ErrorCodeSupressionDictionary.Add(System.Collections.Generic.KeyValuePair{System.Int32,System.Boolean})">
            <inheritdoc />
        </member>
        <member name="M:TypeSafe.Http.Net.SupressResponseErrorCodesAttribute.ErrorCodeSupressionDictionary.Clear">
            <inheritdoc />
        </member>
        <member name="M:TypeSafe.Http.Net.SupressResponseErrorCodesAttribute.ErrorCodeSupressionDictionary.Contains(System.Collections.Generic.KeyValuePair{System.Int32,System.Boolean})">
            <inheritdoc />
        </member>
        <member name="M:TypeSafe.Http.Net.SupressResponseErrorCodesAttribute.ErrorCodeSupressionDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.Int32,System.Boolean}[],System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:TypeSafe.Http.Net.SupressResponseErrorCodesAttribute.ErrorCodeSupressionDictionary.Remove(System.Collections.Generic.KeyValuePair{System.Int32,System.Boolean})">
            <inheritdoc />
        </member>
        <member name="P:TypeSafe.Http.Net.SupressResponseErrorCodesAttribute.ErrorCodeSupressionDictionary.Count">
            <inheritdoc />
        </member>
        <member name="P:TypeSafe.Http.Net.SupressResponseErrorCodesAttribute.ErrorCodeSupressionDictionary.IsReadOnly">
            <inheritdoc />
        </member>
        <member name="M:TypeSafe.Http.Net.SupressResponseErrorCodesAttribute.ErrorCodeSupressionDictionary.Add(System.Int32,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:TypeSafe.Http.Net.SupressResponseErrorCodesAttribute.ErrorCodeSupressionDictionary.ContainsKey(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:TypeSafe.Http.Net.SupressResponseErrorCodesAttribute.ErrorCodeSupressionDictionary.Remove(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:TypeSafe.Http.Net.SupressResponseErrorCodesAttribute.ErrorCodeSupressionDictionary.TryGetValue(System.Int32,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="P:TypeSafe.Http.Net.SupressResponseErrorCodesAttribute.ErrorCodeSupressionDictionary.Item(System.Int32)">
            <inheritdoc />
        </member>
        <member name="P:TypeSafe.Http.Net.SupressResponseErrorCodesAttribute.ErrorCodeSupressionDictionary.System#Collections#Generic#IReadOnlyDictionary{System#Int32,System#Boolean}#Keys">
            <inheritdoc />
        </member>
        <member name="P:TypeSafe.Http.Net.SupressResponseErrorCodesAttribute.ErrorCodeSupressionDictionary.System#Collections#Generic#IReadOnlyDictionary{System#Int32,System#Boolean}#Values">
            <inheritdoc />
        </member>
        <member name="P:TypeSafe.Http.Net.SupressResponseErrorCodesAttribute.ErrorCodeSupressionDictionary.Keys">
            <inheritdoc />
        </member>
        <member name="P:TypeSafe.Http.Net.SupressResponseErrorCodesAttribute.ErrorCodeSupressionDictionary.Values">
            <inheritdoc />
        </member>
    </members>
</doc>
