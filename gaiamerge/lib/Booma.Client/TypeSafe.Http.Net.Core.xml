<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TypeSafe.Http.Net.Core</name>
    </assembly>
    <members>
        <member name="T:TypeSafe.Http.Net.CastleCoreInvocationCallContextAdapter">
            <summary>
            Adapter for the castle core <see cref="T:Castle.DynamicProxy.IInvocation"/> adapted to the
            <see cref="T:TypeSafe.Http.Net.IServiceCallContext"/> interface.
            </summary>
        </member>
        <member name="P:TypeSafe.Http.Net.CastleCoreInvocationCallContextAdapter.ServiceType">
            <inheritdoc />
        </member>
        <member name="P:TypeSafe.Http.Net.CastleCoreInvocationCallContextAdapter.ServiceMethod">
            <inheritdoc />
        </member>
        <member name="P:TypeSafe.Http.Net.CastleCoreInvocationCallContextAdapter.Invocation">
            <summary>
            The managed castle core invocation.
            </summary>
        </member>
        <member name="T:TypeSafe.Http.Net.CastleCoreInvocationParametersContextAdapter">
            <summary>
            Adapter for the castle core <see cref="T:Castle.DynamicProxy.IInvocation"/> adapted to the
            <see cref="T:TypeSafe.Http.Net.IServiceCallParametersContext"/> interface.
            </summary>
        </member>
        <member name="P:TypeSafe.Http.Net.CastleCoreInvocationParametersContextAdapter.HasParameters">
            <inheritdoc />
        </member>
        <member name="P:TypeSafe.Http.Net.CastleCoreInvocationParametersContextAdapter.Parameters">
            <inheritdoc />
        </member>
        <member name="P:TypeSafe.Http.Net.CastleCoreInvocationParametersContextAdapter.Invocation">
            <summary>
            The managed castle core invocation.
            </summary>
        </member>
        <member name="P:TypeSafe.Http.Net.DefaultBodyContext.HasBody">
            <inheritdoc />
        </member>
        <member name="P:TypeSafe.Http.Net.DefaultBodyContext.Body">
            <inheritdoc />
        </member>
        <member name="P:TypeSafe.Http.Net.DefaultErrorCodeSupressedContext.SupressedErrorCodes">
            <inheritdoc />
        </member>
        <member name="P:TypeSafe.Http.Net.HttpRequestContext.ActionPath">
            <inheritdoc />
        </member>
        <member name="P:TypeSafe.Http.Net.HttpRequestContext.RequestMethod">
            <inheritdoc />
        </member>
        <member name="P:TypeSafe.Http.Net.HttpRequestContext.RequestHeaders">
            <inheritdoc />
        </member>
        <member name="P:TypeSafe.Http.Net.HttpRequestContext.BodyContext">
            <inheritdoc />
        </member>
        <member name="P:TypeSafe.Http.Net.HttpRequestContext.SupressedErrorCodesContext">
            <inheritdoc />
        </member>
        <member name="P:TypeSafe.Http.Net.NoBodyContext.Instance">
            <summary>
            Static referencable instance of the <see cref="T:TypeSafe.Http.Net.NoBodyContext"/>.
            </summary>
        </member>
        <member name="P:TypeSafe.Http.Net.NoBodyContext.HasBody">
            <inheritdoc />
        </member>
        <member name="P:TypeSafe.Http.Net.NoBodyContext.Body">
            <inheritdoc />
        </member>
        <member name="P:TypeSafe.Http.Net.NoBodyContext.ContentAttributeType">
            <inheritdoc />
        </member>
        <member name="P:TypeSafe.Http.Net.NoErrorCodesSupressedContext.SupressedErrorCodes">
            <inheritdoc />
        </member>
        <member name="M:TypeSafe.Http.Net.NoErrorCodesSupressedContext.InternalEmptySupressionCodeDictionary.GetEnumerator">
            <inheritdoc />
        </member>
        <member name="M:TypeSafe.Http.Net.NoErrorCodesSupressedContext.InternalEmptySupressionCodeDictionary.System#Collections#IEnumerable#GetEnumerator">
            <inheritdoc />
        </member>
        <member name="P:TypeSafe.Http.Net.NoErrorCodesSupressedContext.InternalEmptySupressionCodeDictionary.Count">
            <inheritdoc />
        </member>
        <member name="M:TypeSafe.Http.Net.NoErrorCodesSupressedContext.InternalEmptySupressionCodeDictionary.ContainsKey(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:TypeSafe.Http.Net.NoErrorCodesSupressedContext.InternalEmptySupressionCodeDictionary.TryGetValue(System.Int32,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="P:TypeSafe.Http.Net.NoErrorCodesSupressedContext.InternalEmptySupressionCodeDictionary.Item(System.Int32)">
            <inheritdoc />
        </member>
        <member name="P:TypeSafe.Http.Net.NoErrorCodesSupressedContext.InternalEmptySupressionCodeDictionary.Keys">
            <inheritdoc />
        </member>
        <member name="P:TypeSafe.Http.Net.NoErrorCodesSupressedContext.InternalEmptySupressionCodeDictionary.Values">
            <inheritdoc />
        </member>
        <member name="P:TypeSafe.Http.Net.NoParametersContext.HasParameters">
            <inheritdoc />
        </member>
        <member name="P:TypeSafe.Http.Net.NoParametersContext.Parameters">
            <inheritdoc />
        </member>
        <member name="M:TypeSafe.Http.Net.RequestContextFactory.CreateContext(TypeSafe.Http.Net.IServiceCallContext,TypeSafe.Http.Net.IServiceCallParametersContext)">
            <inheritdoc />
        </member>
        <member name="T:TypeSafe.Http.Net.SerializationRegisterationExtensions">
            <summary>
            Extension methods that help allow you to register serialization
            factories/provides in a much cleaner fashion
            </summary>
        </member>
        <member name="M:TypeSafe.Http.Net.SerializationRegisterationExtensions.RegisterDefaultSerializers``1(``0)">
            <summary>
            Registers all the default serializers that require no additional external dependencies such as string content
            and urlencoded body content and more.
            </summary>
            <param name="builder">The builder being built.</param>
            <returns>The builder for fluent chaining.</returns>
        </member>
        <member name="P:TypeSafe.Http.Net.BasicRequestHeader.HeaderType">
            <inheritdoc />
        </member>
        <member name="P:TypeSafe.Http.Net.BasicRequestHeader.HeaderValue">
            <inheritdoc />
        </member>
        <member name="M:TypeSafe.Http.Net.HeaderServiceCallInterpreter.ProduceFromContext(TypeSafe.Http.Net.IServiceCallContext,TypeSafe.Http.Net.IServiceCallParametersContext)">
            <inheritdoc />
        </member>
        <member name="P:TypeSafe.Http.Net.HttpServiceCallAsyncCallInterceptor.RequestContextFactory">
            <summary>
            The factory for building contexts.
            </summary>
        </member>
        <member name="M:TypeSafe.Http.Net.HttpServiceCallAsyncCallInterceptor.InterceptSynchronous(Castle.DynamicProxy.IInvocation)">
            <inheritdoc />
        </member>
        <member name="M:TypeSafe.Http.Net.HttpServiceCallAsyncCallInterceptor.InterceptAsynchronous(Castle.DynamicProxy.IInvocation)">
            <inheritdoc />
        </member>
        <member name="M:TypeSafe.Http.Net.HttpServiceCallAsyncCallInterceptor.InterceptAsynchronous``1(Castle.DynamicProxy.IInvocation)">
            <inheritdoc />
        </member>
        <member name="P:TypeSafe.Http.Net.RestServiceBuilder`1.Client">
            <summary>
            The client to use.
            </summary>
        </member>
        <member name="M:TypeSafe.Http.Net.RestServiceBuilder`1.Create">
            <summary>
            Creates a new service builder that can be configured for
            REST/HTTP/Web use.
            </summary>
            <returns>A new builder for the <typeparamref name="THttpServiceInterface"/> service interface.</returns>
        </member>
        <member name="M:TypeSafe.Http.Net.RestServiceBuilder`1.Build">
            <inheritdoc />
        </member>
        <member name="M:TypeSafe.Http.Net.RestServiceBuilder`1.Register``2(``1)">
            <inheritdoc />
        </member>
        <member name="M:TypeSafe.Http.Net.RestServiceBuilder`1.Register(TypeSafe.Http.Net.IHttpServiceProxy)">
            <inheritdoc />
        </member>
        <member name="T:TypeSafe.Http.Net.TypeSafeHttpBuilder`1">
            <summary>
            Builder for the type safe HTTP service.
            </summary>
            <typeparam name="THttpServiceInterface">The service type.</typeparam>
        </member>
        <member name="M:TypeSafe.Http.Net.TypeSafeHttpBuilder`1.Create">
            <summary>
            Creates a new service builder that can be configured for
            REST/HTTP/Web use.
            </summary>
            <returns>A new builder for the <typeparamref name="THttpServiceInterface"/> service interface.</returns>
        </member>
        <member name="P:TypeSafe.Http.Net.HttpMethodReader.ReadHttpMethod">
            <summary>
            The HTTP method read
            </summary>
        </member>
        <member name="P:TypeSafe.Http.Net.StringBodySerializationStrategy.AssociatedContentType">
            <inheritdoc />
        </member>
        <member name="M:TypeSafe.Http.Net.StringBodySerializationStrategy.TrySerialize(System.Object,TypeSafe.Http.Net.IRequestBodyWriter)">
            <inheritdoc />
        </member>
        <member name="M:TypeSafe.Http.Net.StringBodySerializationStrategy.Deserialize``1(TypeSafe.Http.Net.IResponseBodyReader)">
            <inheritdoc />
        </member>
        <member name="M:TypeSafe.Http.Net.StringBodySerializationStrategy.DeserializeAsync``1(TypeSafe.Http.Net.IResponseBodyReader)">
            <inheritdoc />
        </member>
        <member name="P:TypeSafe.Http.Net.MemberReflectionTypeMediator`1.MemberGetter">
            <summary>
            Delegate that can grab the <see cref="!:MemberInformation"/> member value.
            </summary>
        </member>
        <member name="M:TypeSafe.Http.Net.MemberReflectionTypeMediator`1.Access(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:TypeSafe.Http.Net.MemberReflectionTypeMediator.Access(System.Object)">
            <summary>
            Delegate that can grab the <see cref="!:MemberInformation"/> member value.
            </summary>
        </member>
        <member name="P:TypeSafe.Http.Net.UrlEncodedBodySerializerStrategy.AssociatedContentType">
            <inheritdoc />
        </member>
        <member name="M:TypeSafe.Http.Net.UrlEncodedBodySerializerStrategy.TrySerialize(System.Object,TypeSafe.Http.Net.IRequestBodyWriter)">
            <inheritdoc />
        </member>
        <member name="M:TypeSafe.Http.Net.UrlEncodedBodySerializerStrategy.Deserialize``1(TypeSafe.Http.Net.IResponseBodyReader)">
            <inheritdoc />
        </member>
        <member name="M:TypeSafe.Http.Net.UrlEncodedBodySerializerStrategy.DeserializeAsync``1(TypeSafe.Http.Net.IResponseBodyReader)">
            <inheritdoc />
        </member>
        <member name="M:TypeSafe.Http.Net.UrlEncodedMemberKeyValueCollectionAdapter.GetEnumerator">
            <inheritdoc />
        </member>
        <member name="M:TypeSafe.Http.Net.UrlEncodedMemberKeyValueCollectionAdapter.System#Collections#IEnumerable#GetEnumerator">
            <inheritdoc />
        </member>
        <member name="T:TypeSafe.Http.Net.ContentSerializationFactory">
            <summary>
            Serializer/Deserializer factory that takes in initial registerations.
            </summary>
        </member>
        <member name="P:TypeSafe.Http.Net.ContentSerializationFactory.SerializationContentTypeAttributeMap">
            <summary>
            Map containing the serializers.
            </summary>
        </member>
        <member name="P:TypeSafe.Http.Net.ContentSerializationFactory.DeserializationContentTypeStringMap">
            <summary>
            Map containing the deserializers.
            </summary>
        </member>
        <member name="M:TypeSafe.Http.Net.ContentSerializationFactory.Register``2(``1)">
            <inheritdoc />
        </member>
        <member name="M:TypeSafe.Http.Net.ContentSerializationFactory.SerializerFor(System.Type)">
            <inheritdoc />
        </member>
        <member name="M:TypeSafe.Http.Net.ContentSerializationFactory.DeserializerFor(System.String)">
            <inheritdoc />
        </member>
    </members>
</doc>
