<?xml version="1.0"?>
<doc>
    <assembly>
        <name>GladNet.Serializer.Protobuf</name>
    </assembly>
    <members>
        <member name="T:GladNet.Serializer.Protobuf.ProtobufnetDeserializerStrategy">
            <summary>
            Protobuf-net deserializer strategy.
            </summary>
        </member>
        <member name="M:GladNet.Serializer.Protobuf.ProtobufnetDeserializerStrategy.Deserialize``1(System.Byte[])">
            <summary>
            Deserializes the potential <typeparamref name="TData"/> instance represented by the <see cref="T:System.Byte"/>[] using Protobuf-net.
            </summary>
            <typeparam name="TData">Type to deserialize to.</typeparam>
            <param name="value">Byte representation of an object.</param>
            <returns>An instance/value deserialized from the given byte[] or null if failed.</returns>
        </member>
        <member name="T:GladNet.Serializer.Protobuf.ProtobufnetRegistry">
            <summary>
            Object provides registry serivces for registering types with
            ProtoBuf-net with <see cref="T:ProtoBuf.Meta.RuntimeTypeModel"/>.
            </summary>
        </member>
        <member name="T:GladNet.Serializer.Protobuf.ProtobufnetSerializerStrategy">
            <summary>
            Protobuf-net serializer strategy.
            </summary>
        </member>
        <member name="M:GladNet.Serializer.Protobuf.ProtobufnetSerializerStrategy.Serialize``1(``0)">
            <summary>
            Serializes the a <typeparamref name="TData"/> instance/value to a <see cref="T:System.Byte"/>[] using Protobuf-net.
            </summary>
            <typeparam name="TData">Type being serialized.</typeparam>
            <param name="data">Instance/value to serialize.</param>
            <returns>An instance/value serialized from the given instance of <typeparamref name="TData"/>.</returns>
        </member>
        <member name="T:GladNet.Serializer.Protobuf.StackIntSurrogate">
            <summary>
            Serializable surrogate type for the Stack{int} type.
            </summary>
        </member>
    </members>
</doc>
